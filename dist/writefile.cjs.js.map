{"version":3,"file":"writefile.cjs.js","sources":["../src/util.ts","../src/index.ts"],"sourcesContent":["const fs = require(\"fs\");\r\nconst stat = fs.stat;\r\n\r\nconst util = {\r\n  isExists(src: string, cb: (isExists: boolean) => void) {\r\n    // 检查文件是否存在于当前目录中。\r\n    fs.access(src, fs.constants.F_OK, (err: Error) => {\r\n      cb(err ? false : true);\r\n    });\r\n  },\r\n  exists(src: string, dst: string, callback: (a: string, b: string) => void) {\r\n    // 检查文件是否存在于当前目录中。\r\n    fs.access(dst, fs.constants.F_OK, (err: Error) => {\r\n      if (err) {\r\n        fs.mkdir(dst, function () {\r\n          //创建目录\r\n          callback(src, dst);\r\n        });\r\n      } else {\r\n        callback(src, dst);\r\n      }\r\n    });\r\n  },\r\n  copyDir(\r\n    src: string,\r\n    dst: string,\r\n    cb?: (fromPath: string, toPath: string) => void\r\n  ) {\r\n    fs.readdir(src, function (err: Error, paths: [string]) {\r\n      if (err) {\r\n        throw err;\r\n      }\r\n      paths.forEach(function (path) {\r\n        var _src = src + \"/\" + path;\r\n        var _dst = dst + \"/\" + path;\r\n        stat(_src, function (err: Error, st: any) {\r\n          if (err) {\r\n            throw err;\r\n          }\r\n          if (st.isFile()) {\r\n            if (cb) {\r\n              cb(_src, _dst);\r\n            } else {\r\n              const originRoot = fs.readFileSync(_src, { encoding: \"utf8\" });\r\n              fs.writeFileSync(_dst, originRoot);\r\n            }\r\n          } else if (st.isDirectory()) {\r\n            util.exists(_src, _dst, (src, dst) => {\r\n              util.copyDir(src, dst, cb);\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n  },\r\n};\r\n\r\nexport default util;\r\n","// #!/usr/bin/env node\r\nconst ejs = require(\"ejs\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nimport util from \"./util\";\r\n\r\ninterface IFileList {\r\n  use: boolean;\r\n  [propsData: string]: any;\r\n}\r\n\r\nconst currentPath = process.cwd();\r\n\r\nconst configPath = path.resolve(currentPath, \"writeFile.config.js\");\r\nconst isExistConfig = fs.existsSync(configPath);\r\n\r\nif (!isExistConfig) {\r\n  throw new Error(\"根目录不存在配置文件\");\r\n}\r\n\r\ntry {\r\n  let config = require(configPath);\r\n  if (isExistConfig && !config.filelist) {\r\n    throw new Error(\"配置文件不存在filelist字段\");\r\n  }\r\n  if (isExistConfig && config.filelist && !Array.isArray(config.filelist)) {\r\n    throw new Error(\"filelist字段不是一个数组\");\r\n  }\r\n  if (isExistConfig && config.filelist && Array.isArray(config.filelist)) {\r\n    config.filelist.forEach((file: IFileList) => {\r\n      if (!file.use) {\r\n        return;\r\n      }\r\n      if (file.useDir) {\r\n        createDir(file);\r\n      }\r\n      if (file.useFile) {\r\n        createForEach(file);\r\n      }\r\n    });\r\n  }\r\n} catch (error) {\r\n  throw new Error(error);\r\n}\r\n\r\nfunction createDir(params: IFileList) {\r\n  if (!params.useDir) {\r\n    return;\r\n  }\r\n  const myFromKey = \"fromDir__\";\r\n  const myToKey = \"toDir__\";\r\n  let getFrom = Object.keys(params)\r\n    .filter((key) => {\r\n      return key.startsWith(myFromKey);\r\n    })\r\n    .map((key) => key.replace(myFromKey, \"\"));\r\n  let getTo = Object.keys(params)\r\n    .filter((key) => {\r\n      return key.startsWith(myToKey);\r\n    })\r\n    .map((key) => key.replace(myToKey, \"\"));\r\n  getFrom.forEach((fromPath) => {\r\n    let toIndex = getTo.indexOf(fromPath);\r\n    if (toIndex !== -1) {\r\n      const fromMyPath = myFromKey + fromPath;\r\n      const toMyPath = myToKey + getTo[getTo.indexOf(fromPath)];\r\n      createDirTemplates(\r\n        params[fromMyPath],\r\n        params[toMyPath],\r\n        params,\r\n        params.force\r\n      );\r\n    }\r\n  });\r\n}\r\n\r\nfunction createDirTemplates(\r\n  fromOrigin: string,\r\n  targetOrigin: string,\r\n  params: IFileList,\r\n  force: boolean = false\r\n) {\r\n  const rootView = path.resolve(currentPath, fromOrigin);\r\n  const targetView = path.resolve(currentPath, targetOrigin);\r\n  util.isExists(rootView, (isExists) => {\r\n    if (isExists) {\r\n      util.isExists(targetView, (isExistsTarget) => {\r\n        if (isExistsTarget && !force) {\r\n          throw \"目标路径已存在，强制覆盖请使用字段force\";\r\n        } else {\r\n          const isExistTargetViewDir = fs.existsSync(targetView);\r\n          if (!isExistTargetViewDir) {\r\n            fs.mkdirSync(targetView, { recursive: true });\r\n          }\r\n          util.copyDir(\r\n            rootView,\r\n            targetView,\r\n            (fromPath: string, toPath: string) => {\r\n              const originRoot = fs.readFileSync(fromPath, {\r\n                encoding: \"utf8\",\r\n              });\r\n              const html = ejs.render(originRoot, params);\r\n              fs.writeFileSync(toPath, html);\r\n            }\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      throw \"不存在源路径\";\r\n    }\r\n  });\r\n}\r\n\r\nfunction createForEach(params: IFileList) {\r\n  if (!params.useFile) {\r\n    return;\r\n  }\r\n  const myFromKey = \"from__\";\r\n  const myToKey = \"to__\";\r\n  let getFrom = Object.keys(params)\r\n    .filter((key) => {\r\n      return key.startsWith(myFromKey);\r\n    })\r\n    .map((key) => key.replace(myFromKey, \"\"));\r\n  let getTo = Object.keys(params)\r\n    .filter((key) => {\r\n      return key.startsWith(myToKey);\r\n    })\r\n    .map((key) => key.replace(myToKey, \"\"));\r\n  getFrom.forEach((fromPath) => {\r\n    let toIndex = getTo.indexOf(fromPath);\r\n    if (toIndex !== -1) {\r\n      const fromMyPath = myFromKey + fromPath;\r\n      const toMyPath = myToKey + getTo[getTo.indexOf(fromPath)];\r\n      createTemplate(\r\n        params[fromMyPath],\r\n        params[toMyPath],\r\n        params,\r\n        params.force\r\n      );\r\n    }\r\n  });\r\n}\r\n\r\nfunction createTemplate(\r\n  fromOrigin: string,\r\n  targetOrigin: string,\r\n  params: IFileList,\r\n  force: boolean = false\r\n) {\r\n  const rootView = path.resolve(currentPath, fromOrigin);\r\n  const targetView = path.resolve(currentPath, targetOrigin);\r\n  const { dir } = path.parse(targetView);\r\n  const isExistTargetViewDir = fs.existsSync(dir);\r\n  const isExistTargetView = fs.existsSync(targetView);\r\n  if (!isExistTargetView || force) {\r\n    if (!isExistTargetViewDir) {\r\n      fs.mkdirSync(dir, { recursive: true });\r\n    }\r\n    const originRoot = fs.readFileSync(rootView, { encoding: \"utf8\" });\r\n    const html = ejs.render(originRoot, params);\r\n    fs.writeFileSync(targetView, html);\r\n  } else {\r\n    throw \"路径已存在，为了安全，不覆盖已存在的文件\";\r\n  }\r\n}\r\n"],"names":["fs"],"mappings":"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"}
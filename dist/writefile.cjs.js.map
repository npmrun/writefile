{"version":3,"file":"writefile.cjs.js","sources":["../src/util.ts","../src/config.ts","../src/func.ts","../src/index.ts"],"sourcesContent":["const fs = require(\"fs\");\r\nconst stat = fs.stat;\r\n\r\nconst util = {\r\n  isExists(src: string, cb: (isExists: boolean) => void) {\r\n    // 检查文件是否存在于当前目录中。\r\n    fs.access(src, fs.constants.F_OK, (err: Error) => {\r\n      cb(err ? false : true);\r\n    });\r\n  },\r\n  exists(src: string, dst: string, callback: (a: string, b: string) => void) {\r\n    // 检查文件是否存在于当前目录中。\r\n    fs.access(dst, fs.constants.F_OK, (err: Error) => {\r\n      if (err) {\r\n        fs.mkdir(dst, function () {\r\n          //创建目录\r\n          callback(src, dst);\r\n        });\r\n      } else {\r\n        callback(src, dst);\r\n      }\r\n    });\r\n  },\r\n  copyDir(\r\n    src: string,\r\n    dst: string,\r\n    cb?: (fromPath: string, toPath: string) => void\r\n  ) {\r\n    fs.readdir(src, function (err: Error, paths: [string]) {\r\n      if (err) {\r\n        throw err;\r\n      }\r\n      paths.forEach(function (path) {\r\n        var _src = src + \"/\" + path;\r\n        var _dst = dst + \"/\" + path;\r\n        stat(_src, function (err: Error, st: any) {\r\n          if (err) {\r\n            throw err;\r\n          }\r\n          if (st.isFile()) {\r\n            if (cb) {\r\n              cb(_src, _dst);\r\n            } else {\r\n              const originRoot = fs.readFileSync(_src, { encoding: \"utf8\" });\r\n              fs.writeFileSync(_dst, originRoot);\r\n            }\r\n          } else if (st.isDirectory()) {\r\n            util.exists(_src, _dst, (src, dst) => {\r\n              util.copyDir(src, dst, cb);\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n  },\r\n};\r\n\r\nexport default util;\r\n","export default {\r\n  configFileName: \"writefile.config.js\",\r\n  configFileListName: \"filelist\",\r\n  dirFromKey: \"fromDir__\",\r\n  dirToKey: \"toDir__\",\r\n  dirErrNoForce: \"目标路径已存在，强制覆盖请使用字段force\",\r\n  dirErrNoExist: \"不存在源路径\",\r\n  fileFromKey: \"from__\",\r\n  fileToKey: \"to__\",\r\n  fileErrNoForce: \"路径已存在，为了安全，不覆盖已存在的文件\",\r\n}","const ejs = require(\"ejs\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nimport {IFileList} from \"./Interface\";\r\nimport util from \"./util\";\r\nimport config from \"./config\";\r\n\r\nlet currentPath = \"\";\r\n\r\nexport default {\r\n  set path(value) {\r\n    currentPath = value;\r\n  },\r\n  get path() {\r\n    return currentPath;\r\n  },\r\n  createDir(params: IFileList) {\r\n    if (!params.useDir) {\r\n      return;\r\n    }\r\n    const myFromKey = config.dirFromKey;\r\n    const myToKey = config.dirToKey;\r\n    let getFrom = Object.keys(params)\r\n      .filter((key) => {\r\n        return key.startsWith(myFromKey);\r\n      })\r\n      .map((key) => key.replace(myFromKey, \"\"));\r\n    let getTo = Object.keys(params)\r\n      .filter((key) => {\r\n        return key.startsWith(myToKey);\r\n      })\r\n      .map((key) => key.replace(myToKey, \"\"));\r\n    getFrom.forEach((fromPath) => {\r\n      let toIndex = getTo.indexOf(fromPath);\r\n      if (toIndex !== -1) {\r\n        const fromMyPath = myFromKey + fromPath;\r\n        const toMyPath = myToKey + getTo[getTo.indexOf(fromPath)];\r\n        this.createDirTemplates(\r\n          params[fromMyPath],\r\n          params[toMyPath],\r\n          params,\r\n          params.force\r\n        );\r\n      }\r\n    });\r\n  },\r\n  createDirTemplates(\r\n    fromOrigin: string,\r\n    targetOrigin: string,\r\n    params: IFileList,\r\n    force: boolean = false\r\n  ) {\r\n    const rootView = path.resolve(this.path, fromOrigin);\r\n    const targetView = path.resolve(this.path, targetOrigin);\r\n    util.isExists(rootView, (isExists) => {\r\n      if (isExists) {\r\n        util.isExists(targetView, (isExistsTarget) => {\r\n          if (isExistsTarget && !force) {\r\n            throw config.dirErrNoForce;\r\n          } else {\r\n            const isExistTargetViewDir = fs.existsSync(targetView);\r\n            if (!isExistTargetViewDir) {\r\n              fs.mkdirSync(targetView, { recursive: true });\r\n            }\r\n            util.copyDir(\r\n              rootView,\r\n              targetView,\r\n              (fromPath: string, toPath: string) => {\r\n                const originRoot = fs.readFileSync(fromPath, {\r\n                  encoding: \"utf8\",\r\n                });\r\n                const html = ejs.render(originRoot, params);\r\n                fs.writeFileSync(toPath, html);\r\n              }\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        throw config.dirErrNoExist;\r\n      }\r\n    });\r\n  },\r\n  createForEach(params: IFileList) {\r\n    if (!params.useFile) {\r\n      return;\r\n    }\r\n    const myFromKey = config.fileFromKey;\r\n    const myToKey = config.fileToKey;\r\n    let getFrom = Object.keys(params)\r\n      .filter((key) => {\r\n        return key.startsWith(myFromKey);\r\n      })\r\n      .map((key) => key.replace(myFromKey, \"\"));\r\n    let getTo = Object.keys(params)\r\n      .filter((key) => {\r\n        return key.startsWith(myToKey);\r\n      })\r\n      .map((key) => key.replace(myToKey, \"\"));\r\n    getFrom.forEach((fromPath) => {\r\n      let toIndex = getTo.indexOf(fromPath);\r\n      if (toIndex !== -1) {\r\n        const fromMyPath = myFromKey + fromPath;\r\n        const toMyPath = myToKey + getTo[getTo.indexOf(fromPath)];\r\n        this.createTemplate(\r\n          params[fromMyPath],\r\n          params[toMyPath],\r\n          params,\r\n          params.force\r\n        );\r\n      }\r\n    });\r\n  },\r\n  createTemplate(\r\n    fromOrigin: string,\r\n    targetOrigin: string,\r\n    params: IFileList,\r\n    force: boolean = false\r\n  ) {\r\n    const rootView = path.resolve(this.path, fromOrigin);\r\n    const targetView = path.resolve(this.path, targetOrigin);\r\n    const { dir } = path.parse(targetView);\r\n    const isExistTargetViewDir = fs.existsSync(dir);\r\n    const isExistTargetView = fs.existsSync(targetView);\r\n    if (!isExistTargetView || force) {\r\n      if (!isExistTargetViewDir) {\r\n        fs.mkdirSync(dir, { recursive: true });\r\n      }\r\n      const originRoot = fs.readFileSync(rootView, { encoding: \"utf8\" });\r\n      const html = ejs.render(originRoot, params);\r\n      fs.writeFileSync(targetView, html);\r\n    } else {\r\n      throw config.fileErrNoForce;\r\n    }\r\n  },\r\n};\r\n","// #!/usr/bin/env node\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nimport func from \"./func\";\r\nimport config from \"./config\";\r\nimport {IFileList} from \"./Interface\";\r\n\r\nconst currentPath = process.cwd();\r\n\r\nfunc.path = currentPath;\r\n\r\nconst configPath = path.resolve(currentPath, config.configFileName);\r\nconst isExistConfig = fs.existsSync(configPath);\r\n\r\nif (!isExistConfig) {\r\n  throw new Error(\"根目录不存在配置文件\");\r\n}\r\n\r\ntry {\r\n  let config = require(configPath);\r\n  if (isExistConfig && !config[config.configFileListName]) {\r\n    throw new Error(`配置文件不存在${config.configFileListName}字段`);\r\n  }\r\n  if (isExistConfig && config[config.configFileListName] && !Array.isArray(config[config.configFileListName])) {\r\n    throw new Error(`${config.configFileListName}字段不是一个数组`);\r\n  }\r\n  if (isExistConfig && config[config.configFileListName] && Array.isArray(config[config.configFileListName])) {\r\n    config[config.configFileListName].forEach((file: IFileList) => {\r\n      // 不使用该模块\r\n      if (!file.use) {\r\n        return;\r\n      }\r\n      // 使用文件夹模板\r\n      if (file.useDir) {\r\n        func.createDir(file);\r\n      }\r\n      // 使用文件模板\r\n      if (file.useFile) {\r\n        func.createForEach(file);\r\n      }\r\n    });\r\n  }\r\n} catch (error) {\r\n  throw new Error(error);\r\n}"],"names":["fs","path","currentPath"],"mappings":"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"}
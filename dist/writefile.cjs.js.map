{"version":3,"file":"writefile.cjs.js","sources":["../src/index.ts"],"sourcesContent":["// #!/usr/bin/env node\r\nconst ejs = require(\"ejs\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\n\r\ninterface IFileList{\r\n  use:boolean;\r\n  [propsData:string]:any;\r\n}\r\n\r\nconst currentPath = process.cwd();\r\n\r\nconst configPath = path.resolve(currentPath,'writeFile.config.js');\r\nconst isExistConfig = fs.existsSync(configPath);\r\n\r\nif (!isExistConfig) {\r\n  throw new Error('根目录不存在配置文件')\r\n}\r\n\r\ntry {\r\n  let config = require(configPath)\r\n  if (isExistConfig&&!config.filelist) {\r\n    throw new Error('配置文件不存在filelist字段')\r\n  }\r\n  if (isExistConfig&&config.filelist && !Array.isArray(config.filelist)) {\r\n    throw new Error('filelist字段不是一个数组')\r\n  }\r\n  if (isExistConfig&&config.filelist && Array.isArray(config.filelist)) {\r\n    config.filelist.forEach((file:IFileList) => {\r\n      createForEach(file)\r\n    })\r\n  }\r\n} catch (error) {\r\n  throw new Error(error)\r\n}\r\n\r\nfunction createForEach(params:IFileList) {\r\n  if (!params.use) {\r\n    return\r\n  }\r\n  const myFromKey = \"from__\"\r\n  const myToKey = \"to__\"\r\n  let getFrom = Object.keys(params).filter(key =>{\r\n    return key.startsWith(myFromKey);\r\n  }).map(key =>key.replace(myFromKey,''));\r\n  let getTo = Object.keys(params).filter(key =>{\r\n    return key.startsWith(myToKey);\r\n  }).map(key =>key.replace(myToKey,''));\r\n  getFrom.forEach(fromPath => {\r\n    let toIndex = getTo.indexOf(fromPath);\r\n    if (toIndex !== -1) {\r\n      const fromMyPath = myFromKey+fromPath;\r\n      const toMyPath = myToKey+getTo[getTo.indexOf(fromPath)]\r\n      createTemplate(\r\n        params[fromMyPath],\r\n        params[toMyPath],\r\n        params\r\n      );\r\n    }\r\n  })\r\n}\r\n\r\nfunction createTemplate(fromOrigin:string, targetOrigin:string, params:IFileList) {\r\n  const rootView = path.resolve(currentPath,fromOrigin);\r\n  const targetView = path.resolve(currentPath,targetOrigin);\r\n  const { dir } = path.parse(targetView);\r\n  const isExistTargetViewDir = fs.existsSync(dir);\r\n  const isExistTargetView = fs.existsSync(targetView);\r\n  if (!isExistTargetView) {\r\n    if (!isExistTargetViewDir) {\r\n      fs.mkdirSync(dir, { recursive: true });\r\n    }\r\n    const originRoot = fs.readFileSync(rootView, { encoding: \"utf8\" });\r\n    const html = ejs.render(originRoot, params);\r\n    fs.writeFileSync(targetView, html);\r\n  } else {\r\n    throw \"路径已存在，为了安全，不覆盖已存在的文件\";\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}